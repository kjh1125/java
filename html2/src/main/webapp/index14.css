@charset "UTF-8";
body{margin: 0; padding: 0;}
span,label{ display: block;}
/* ol,ul{list-style: none; margin: 0; padding: 0;} */

.box1{width: 100px; height: 100px; background-color: orange;
padding-left: 50px;
}
.box2{width: 100px; height: 100px; background-color: green;
padding-left: 50px; box-sizing: border-box;}
/* box-sizing: border-box : padding, border(line 1px 자동조정)에 적용, 기존 박스 크기 조정 필요X */

.box3{width: 100px; height: 100px; border: 1px solid red;}
.box4{width: 100px; height: 100px; border: 1px solid red; box-sizing: border-box;}

/* 
nth-child(DOM)
nth-of-type(Node)
 */

.ulcss > li:nth-child(1){color:red}
.ulcss > li:nth-child(4){color:red}
.ulcss > li:nth-child(5){color:red}

.olcss > li:nth-of-type(2){color:blue;}
.olcss > li:nth-of-type(3){color:blue;}

/* DOM 태그종류 상관없이 순서대로 번호 사용 */
.div1 > span:nth-child(4){color:red}
/* node 태그 종류단위로 순서 다름 // 
자바스크립트에서 node 사용하기 때문에 node로 잡는게 좋음*/
.div2 > span:nth-of-type(3){color:red}
.div2 > label:nth-of-type(1){color:blue}

/* DOM */
.object1{}
.object1 > span {
	width: 50px; height: 50px;
	background-color: blue;
	
}

.object1 > span:nth-child(2){
	background-color: yellow;
}

.object1 > span:nth-child(odd){ /* odd(홀수), even(짝수)에 전체 적용 */
	background-color: red;
}
.object2{}

.object2 > span, .object2 >label {
	width: 50px; height: 50px;
	background-color: blue;
	
}

.object2 > span:nth-of-type(even), .object2 >label:nth-of-type(odd){
	background-color: yellow;
}


